version: "3.8"

services:
  # indexer:
  #   build:
  #     context: .
  #     dockerfile: ./indexer/Dockerfile
  #   container_name: indexer
  #   restart: unless-stopped
  #   volumes:
  #     - ./logs:/app/logs
  #   environment:
  #     - TZ=UTC
  #   healthcheck:
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #   networks:
  #     - app-network
  #   depends_on:
  #     postgres:
  #       condition: service_healthy

  # api:
  #   build:
  #     context: .
  #     dockerfile: ./api/Dockerfile
  #   container_name: api
  #   restart: unless-stopped
  #   environment:
  #     - TZ=UTC
  #   ports:
  #     - 8080:8080
  #   volumes:
  #     - ./configs:/app/configs
  #     - ./logs:/app/logs
  #   healthcheck:
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #   networks:
  #     - app-network
  #   depends_on:
  #     postgres:
  #       condition: service_healthy

  postgres:
    image: postgres:15.0-alpine
    environment:
      POSTGRES_USER: depositor
      POSTGRES_PASSWORD: depositor
      POSTGRES_DB: depositor
    container_name: postgres
    volumes:
      - data:/var/lib/postgresql/data
    restart: always
    ports:
      - 5432:5432
    healthcheck:
      test: pg_isready --username=depositor --dbname=depositor --quiet
      interval: 15s
      timeout: 5s
      retries: 3
    networks:
      - app-network

volumes:
  data:

networks:
  app-network:
    driver: bridge
