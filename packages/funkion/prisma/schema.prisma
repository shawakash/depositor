// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
    id        String   @id @default(cuid())
    email     String   @unique
    name      String?
    wallets   Wallet[]
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Wallet {
    id            String   @id @default(cuid())
    balance       Float    @default(0)
    user          User     @relation(fields: [userId], references: [id])
    userId        String
    network       Network
    address       String   @unique
    pk            String   // base encoded
    outgoingTx    Transaction[] @relation("FromWallet")
    incomingTx    Transaction[] @relation("ToWallet")

    @@index([userId])
    @@index([address])
    @@unique([userId, network])
}

enum Network {
    SOLANA
    ETHEREUM
}

model Transaction {
    id          String   @id @default(cuid())
    amount      Float
    from        Wallet   @relation("FromWallet", fields: [fromId], references: [id])
    fromId      String
    to          Wallet   @relation("ToWallet", fields: [toId], references: [id])
    toId        String
    status      TxStatus @default(PENDING)
    type        TxType
    timestamp   DateTime @default(now())
    network     Network
    hash        String?  @unique
    error       String?
    metadata    Json?   @default("{}")

    @@index([fromId])
    @@index([toId])
    @@index([status])
    @@index([timestamp])
}

enum TxStatus {
    PENDING
    COMPLETED
    FAILED
    CANCELLED
}

enum TxType {
    DEPOSIT
    WITHDRAWAL
    TRANSFER
    SYSTEM
}
